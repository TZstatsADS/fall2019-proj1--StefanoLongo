tm_map(stemDocument)
setwd("~/Documents/Columbia/Term3/Applied Data Science")
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(lsa)
dt <- read.csv("lyrics.csv")
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
rock <- paste(unlist(dt$lyrics[dt$genre=="Rock"]), collapse ="")
rock.corpus <- Corpus(VectorSource(rock)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
rock.tdm <- tidy(TermDocumentMatrix(rock.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(rock)), type = "prevalent"),
genre = "rock") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Repeat the same process for Hip-Hop
hiphop <- paste(unlist(dt$lyrics[dt$genre=="Hip-Hop"]), collapse ="")
hiphop.corpus <- Corpus(VectorSource(hiphop)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
hiphop.tdm <- tidy(TermDocumentMatrix(hiphop.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(hiphop)), type = "prevalent"),
genre = "hiphop") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
rock.tdm <- tidy(TermDocumentMatrix(rock.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(rock)), type = "prevalent"),
genre = "rock") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
rock.tdm <- tidy(TermDocumentMatrix(rock.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(rock)), type = "prevalent"),
genre = "rock") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
## Estimating how many new words are there for each additional song across the tree genres
j <- nrow(jazz.tdm) / nrow(filter(dt, genre=="Jazz"))
r <- nrow(rock.tdm) / nrow(filter(dt, genre=="Rock"))
h <- nrow(hiphop.tdm) / nrow(filter(dt, genre=="Hip-Hop"))
wordcloud(jazz.tdm$word, jazz.tdm$count, max.words = 50)
wordcloud(rock.tdm$word, rock.tdm$count, max.words = 50)
wordcloud(hiphop.tdm$word, hiphop.tdm$count, max.words = 50)
jazz.rock <- rbind(jazz.tdm, rock.tdm)
jazz.rock.tdm <- jazz.rock %>% cast_dtm(genre, word, count)
jazz.rock.cos <- cosine(t(as.data.frame(as.matrix(jazz.rock.tdm))))
jazz.rock.cos
?load
length(jazz)
langth(jazz.corpus)
length(jazz.corpus)
?sample
jazz_sub <- sample(jazz, 1000)
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("lyrics.RData") %>%
filter(genre ==  "Jazz"|"Rock"|"Hip-Hop")
dt <- load("lyrics.RData")
setwd("~/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
setwd("~/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
setwd("~/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
setwd("~/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
setwd("~/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(lsa)
library(ggplot2)
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("lyrics.RData") %>%
filter(genre ==  "Jazz"|"Rock"|"Hip-Hop")
dt <- load("lyrics.RData")
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("lyrics.RData") %>%
filter(genre ==  "Jazz"|"Rock"|"Hip-Hop")
setwd("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("lyrics.RData") %>%
filter(genre ==  "Jazz"|"Rock"|"Hip-Hop")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
filter(genre ==  "Jazz"|"Rock"|"Hip-Hop")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
filter_(genre ==  "Jazz"|"Rock"|"Hip-Hop")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
filter(genre ==  "Jazz")
?fliter
?filter
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
dplyr::filter(genre ==  "Jazz")
View(dt_lyrics)
library(stringr)
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
dplyr::filter(genre ==  "Jazz")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData") %>%
filter(genre ==  "Jazz")
#Loading data and creating a stem-completed Term-Document matrix for each genre
dt <- load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
dt <- dt_lyrics %>%
filter(genre=="Jazz")
dt <- dt_lyrics %>%
filter(genre=="Jazz"|"Rock"|"Hip-Hop")
#Loading data and creating a stem-completed Term-Document matrix for each genre
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
dt <- dt_lyrics %>%
filter(genre=="Jazz"|"Rock"|"Hip-Hop")
dt <- dt_lyrics %>%
filter(genre %in% c("Jazz", "Rock", "Hip-Hop"))
?sample_frac
dt <- dt_lyrics %>%
filter(genre %in% c("Jazz", "Rock", "Hip-Hop")) %>%
sample_frac(0.3)
#Create a stemmed corpus for Jazz and sample 1000 words
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
sample_n(1000)
#Stem-complete the corpus and create a Document-Term Matrix
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
#Stem-complete the corpus and create a Document-Term Matrix
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
dt <- dt_lyrics %>%
filter(genre %in% c("Jazz", "Rock", "Hip-Hop")) %>%
sample_frac(0.1)
#Create a stemmed corpus for Jazz and sample 1000 words
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
#Stem-complete the corpus and create a Document-Term Matrix
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Stem-complete the corpus and create a Document-Term Matrix
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Repeat the same process for Rock
rock <- paste(unlist(dt$lyrics[dt$genre=="Rock"]), collapse ="")
rock.corpus <- Corpus(VectorSource(rock)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
rock.tdm <- tidy(TermDocumentMatrix(rock.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(rock)), type = "prevalent"),
genre = "rock") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Repeat the same process for Hip-Hop
hiphop <- paste(unlist(dt$lyrics[dt$genre=="Hip-Hop"]), collapse ="")
hiphop.corpus <- Corpus(VectorSource(hiphop)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
hiphop.tdm <- tidy(TermDocumentMatrix(hiphop.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(hiphop)), type = "prevalent"),
genre = "hiphop") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
## Estimating how many new words are there for each additional song across the tree genres
j <- nrow(jazz.tdm) / nrow(filter(dt, genre=="Jazz"))
r <- nrow(rock.tdm) / nrow(filter(dt, genre=="Rock"))
h <- nrow(hiphop.tdm) / nrow(filter(dt, genre=="Hip-Hop"))
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
dt <- dt_lyrics %>%
filter(genre %in% c("Jazz", "Rock", "Hip-Hop")) %>%
sample_frac(0.1)
#Create a stemmed corpus for Jazz
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
#Stem-complete the corpus and create a Document-Term Matrix
jazz.tdm <- tidy(TermDocumentMatrix(jazz.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(jazz)), type = "prevalent"),
genre = "jazz") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Repeat the same process for Rock
rock <- paste(unlist(dt$lyrics[dt$genre=="Rock"]), collapse ="")
rock.corpus <- Corpus(VectorSource(rock)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
rock.tdm <- tidy(TermDocumentMatrix(rock.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(rock)), type = "prevalent"),
genre = "rock") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
#Repeat the same process for Hip-Hop
hiphop <- paste(unlist(dt$lyrics[dt$genre=="Hip-Hop"]), collapse ="")
hiphop.corpus <- Corpus(VectorSource(hiphop)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument)
hiphop.tdm <- tidy(TermDocumentMatrix(hiphop.corpus)) %>%
mutate(word = stemCompletion(term, Corpus(VectorSource(hiphop)), type = "prevalent"),
genre = "hiphop") %>%
dplyr::select(- c(document, term)) %>%
select(genre, word, count)
## Estimating how many new words are there for each additional song across the tree genres
j <- nrow(jazz.tdm) / nrow(filter(dt, genre=="Jazz"))
r <- nrow(rock.tdm) / nrow(filter(dt, genre=="Rock"))
h <- nrow(hiphop.tdm) / nrow(filter(dt, genre=="Hip-Hop"))
## Estimating how many new words are there for each additional song across the tree genres
j <- nrow(jazz.tdm) / nrow(filter(dt, genre=="Jazz"))
r <- nrow(rock.tdm) / nrow(filter(dt, genre=="Rock"))
h <- nrow(hiphop.tdm) / nrow(filter(dt, genre=="Hip-Hop"))
wordcloud(jazz.tdm$word, jazz.tdm$count, max.words = 50)
wordcloud(rock.tdm$word, rock.tdm$count, max.words = 50)
wordcloud(hiphop.tdm$word, hiphop.tdm$count, max.words = 50)
jazz.rock <- rbind(jazz.tdm, rock.tdm)
jazz.rock.tdm <- jazz.rock %>% cast_dtm(genre, word, count)
jazz.rock.cos <- cosine(t(as.data.frame(as.matrix(jazz.rock.tdm))))
jazz.rock.cos
rock.hiphop <- rbind(rock.tdm, hiphop.tdm)
rock.hiphop.tdm <- rock.hiphop %>% cast_dtm(genre, word, count)
rock.hiphop.cos <- cosine(t(as.data.frame(as.matrix(rock.hiphop.tdm))))
rock.hiphop.cos
jazz.hiphop <- rbind(jazz.tdm, hiphop.tdm)
jazz.hiphop.tdm <- jazz.hiphop %>% cast_dtm(genre, word, count)
jazz.hiphop.cos <- cosine(t(as.data.frame(as.matrix(jazz.hiphop.tdm))))
jazz.hiphop.cos
library(sentimentr)
library(syuzhet)
library(tibble)
jazz.rock.hiphop <- rbind(jazz.tdm, rock.tdm, hiphop.tdm)
binary.sent <- get_sentiments("bing")
genre.sentiment <- inner_join(jazz.rock.hiphop, binary.sent, by="word") %>%
mutate(binary.sent.num = ifelse(sentiment =="positive",1,0))
genre.sentiment.binary <- genre.sentiment %>%
group_by(genre) %>%
summarise(mean = weighted.mean(binary.sent.num, count, na.rm=T))
genre.sentiment.binary
categor.sent <- get_sentiments("nrc") %>%
filter(!sentiment %in% c("negative", "positive")) %>%
rename(sentiment.type = sentiment)
j.sent <- inner_join(jazz.tdm, categor.sent) %>%
dplyr::select(-word) %>%
group_by(sentiment.type) %>%
summarise(count = sum(count)) %>%
mutate(genre = "jazz",
ratio = count/sum(count))
r.sent <- inner_join(rock.tdm, categor.sent) %>%
filter(genre=="rock") %>%
dplyr::select(-word) %>%
group_by(sentiment.type) %>%
summarise(count = sum(count)) %>%
mutate(genre = "rock",
ratio = count/sum(count))
h.sent <- inner_join(hiphop.tdm, categor.sent) %>%
filter(genre=="hiphop") %>%
dplyr::select(-word) %>%
group_by(sentiment.type) %>%
summarise(count = sum(count)) %>%
mutate(genre = "hiphop",
ratio = count/sum(count))
genre.sentiment <- rbind(j.sent, r.sent, h.sent)
genre.sentiment$genre <- factor(genre.sentiment$genre, levels = c("jazz", "rock", "hiphop"))
ggplot(genre.sentiment, aes(x=sentiment.type, y=ratio)) +
geom_col(aes(fill=genre), position="dodge")
jazz.corpus <- VCorpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stopwords("english")) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
#Create additiona function for white spaces as shown in class
leadingWhitespace <- content_transformer(function(x) str_trim(x, side = "both"))
additional_words <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da",
"gonna", "im", "dont", "aint", "wont", "yeah", "la", "oi","hey", "year", "years", "last", "past", "feel")
jazz.corpus <- VCorpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stop_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stop_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
#Create a stemmed corpus for Jazz
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, stop_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, sto_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
stop_words <- c(stop_words$word, additional_words)
additional_words <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da",
"gonna", "im", "dont", "aint", "wont", "yeah", "la", "oi","hey", "year", "years", "last", "past", "feel")
stop_words <- c(stop_words$word, additional_words)
stop_words <- c(stop_words$word, additional_words)
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da",
"gonna", "im", "dont", "aint", "wont", "yeah", "la", "oi",
"hey", "year", "years", "last", "past", "feel")
stop_words <- c(stop_words$word, word)
setwd("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data")
library(tm)
library(stringr)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(lsa)
library(ggplot2)
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
#Create additiona function for white spaces as shown in class
leadingWhitespace <- content_transformer(function(x) str_trim(x, side = "both"))
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da",
"gonna", "im", "dont", "aint", "wont", "yeah", "la", "oi",
"hey", "year", "years", "last", "past", "feel")
stop_words <- c(stop_words$word, word)
stop_words <- c(stop_words$word, word)
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
stop_words <- c(stop_words$word, word)
stp_
stop_words
w <- stop_words
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
stop_words <- paste(stop_words$word, word)
stop_words <- paste(stop_words, word)
stop_words <- paste(stop_words, word)
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
stop_words <- paste(stop_words, word)
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
#Create additiona function for white spaces as shown in class
leadingWhitespace <- content_transformer(function(x) str_trim(x, side = "both"))
word <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
stop_words <- paste(stop_words, word)
stop_words <- paste(stop_words, word, "")
#Add extra stop words. I purposefully decided to keep "fuck" and "nigga" because I think they are quite important words in Hip-Hop
stop_words
stop_words <- stop_words
add_words <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
tot_words <- paste(stop_words, word, "")
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
#Create additiona function for white spaces as shown in class
leadingWhitespace <- content_transformer(function(x) str_trim(x, side = "both"))
stop_words <- stop_words
add_words <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
tot_words <- paste(stop_words, word, "")
tot_words <- c(stop_words, word)
View(tot_words)
tot_words <- c(stop_words$word, word)
stop_words <- stop_words
#Create a stemmed corpus for Jazz
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, tot_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
#Create a stemmed corpus for Jazz
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
#Loading data and selecting a random sample of 10% in size in order to make the whole process quicker.
load("/Users/stefano/Documents/GitHub/fall2019-proj1--StefanoLongo/data/lyrics.RData")
dt <- dt_lyrics %>%
filter(genre %in% c("Jazz", "Rock", "Hip-Hop")) %>%
sample_frac(0.1)
#Create additiona function for white spaces as shown in class
leadingWhitespace <- content_transformer(function(x) str_trim(x, side = "both"))
#Add extra stop words. I purposefully decided to keep "fuck" and "nigga" because I think they are quite important words in Hip-Hop
stop_words <- stop_words
add_words <- c("lot", "today", "months", "month", "wanna", "wouldnt", "wasnt", "ha", "na", "ooh", "da", "gonna", "im", "dont", "aint",
"wont", "yeah", "la", "oi", "hey", "year", "years", "last", "past", "feel")
tot_words <- c(stop_words$word, word)
#Create a stemmed corpus for Jazz
jazz <- paste(unlist(dt$lyrics[dt$genre=="Jazz"]), collapse ="")
jazz.corpus <- Corpus(VectorSource(jazz)) %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeWords, character(0)) %>%
tm_map(removeWords, tot_words) %>%
tm_map(removeNumbers) %>%
tm_map(stripWhitespace) %>%
tm_map(stemDocument) %>%
tm_map(leadingWhitespace)
